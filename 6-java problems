6 JAVA Programs

1) checking if a number is armstrong number 
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int userInput = 0;
        boolean validInput = false;

        while (!validInput) {
            System.out.println("Please enter a number:");
            if (scanner.hasNextInt()) {
                userInput = scanner.nextInt();
                validInput = true;
            } else {
                System.out.println("That's not a valid number:");
                scanner.next(); // Clear the invalid input
            }
        }
        System.out.println("You entered: " + userInput);
        
        String numberString = String.valueOf(userInput);
        int sum = 0; // Initialize sum to 0
        int length = numberString.length(); // Get the length of the string
        
        for (int i = 0; i < length; i++) {
            char ch = numberString.charAt(i);
            int digit = Character.getNumericValue(ch);
            int product = 1; // Initialize product for each digit
            
            // Multiply the digit by itself 'length' times
            for (int j = 0; j < length; j++) {
                product *= digit; // Multiply digit to itself
            }
            sum += product; // Add the product to the sum
        }
        System.out.println("Sum of digits multiplied by themselves length times: " + sum);
        scanner.close();
    }
}

2) fibonacci series
import java.util.Scanner;
public class FibonacciSeries {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of terms in the Fibonacci series: ");
        int terms = scanner.nextInt();
        int firstTerm = 0, secondTerm = 1;
        System.out.println("Fibonacci Series up to " + terms + " terms:");
        for (int i = 1; i <= terms; i++) {
            System.out.print(firstTerm + " ");
            
            // Compute the next term
            int nextTerm = firstTerm + secondTerm;
            firstTerm = secondTerm;
            secondTerm = nextTerm;
        }
        scanner.close();
    }
}

3)converting binary number to decimal
import java.util.Scanner;
public class BinaryToDecimal {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter a binary number: ");
        String binaryString = scanner.nextLine();
        
        int decimalValue = 0;
        int base = 1; // 2^0
        
        for (int i = binaryString.length() - 1; i >= 0; i--) {
            // If the character is '1', add the corresponding power of 2
            if (binaryString.charAt(i) == '1') {
                decimalValue += base;
            }
            base *= 2; // Move to the next power of 2
        }
        
        System.out.println("Decimal equivalent: " + decimalValue);
        
        scanner.close();
    }
}

4)import java.util.Scanner;
public class DaysToYearsMonthsDays {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Enter the number of days: ");
        int totalDays = scanner.nextInt();
        
        int daysInYear = 365;
        int daysInMonth = 30; // Approximation for simplicity
        
        int years = totalDays / daysInYear;
        int remainingDaysAfterYears = totalDays % daysInYear;
        int months = remainingDaysAfterYears / daysInMonth;
        int days = remainingDaysAfterYears % daysInMonth;
        
        System.out.println(totalDays + " days is approximately " + years + " years, " + months + " months, and " + days + " days.");
        scanner.close();
    }
}

5)reverse a number without using recurssion
import java.util.Scanner;

public class ReverseNumber {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        int reversedNumber = 0;
        while (number != 0) {
            int digit = number % 10; // Get the last digit
            reversedNumber = reversedNumber * 10 + digit; // Append it to the reversed number
            number /= 10; // Remove the last digit from the original number
        }
        System.out.println("Reversed Number: " + reversedNumber);
        scanner.close();
    }
}

6)checking if entered number palindrome
import java.util.Scanner;
public class PalindromeNumber {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        int originalNumber = number;
        int reversedNumber = 0;
        
        while (number != 0) {
            int digit = number % 10; // Get the last digit
            reversedNumber = reversedNumber * 10 + digit; // Append it to the reversed number
            number /= 10; // Remove the last digit from the original number
        }
        if (originalNumber == reversedNumber) {
            System.out.println(originalNumber + " is a palindrome.");
        } else {
            System.out.println(originalNumber + " is not a palindrome.");
        }
        scanner.close();
    }
}
